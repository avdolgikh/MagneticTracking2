clear all;
clc;

%% Parameters:
emitter_coordinate_number = 5;
nnet_file_name = strcat( '.\Data\NNets\nnet_9receiv_33300_26-108-15' );      
sampleFile = '.\Data\Samples\emitter_sample_9receiv_297_0.04_3_shift_receivers.dat';
partition_size = 297;

%% Analysis

% load the net:
nnetData = load(nnet_file_name);
nnet = nnetData.nnet;

% getting noised sample:
sample = load(sampleFile);

[sample_size, ~, ~, coordinates_ind, mutual_inductance_ind] = ...
                                        GetSampleInfo(sample, emitter_coordinate_number);

mutualInductances = sample(:, mutual_inductance_ind);
targetCoordinates = sample(:, coordinates_ind);

nnetCoordinates = SolveEmitterByNNet( mutualInductances, nnet );

errors = gsubtract(nnetCoordinates, targetCoordinates);  % matrix of errors for each value of the sample

errors(:, 4:5) = errors(:, 4:5) /pi*180;  % convert tilt and azimuth to degrees

one_receiver_x_shift = 0;
for i = 1 : sample_size/partition_size
    
    one_receiver_x_shift = one_receiver_x_shift + 0.004;
    start_index = (partition_size * (i - 1) + 1);
    e
    errors_partition = errors( (297 * (i - 1) + 1) : , :);
    
end

errors_1 = errors(1 : 297, :);
errors_2 = errors(298 : 297*2, :);

rms_errors_1 = rms(errors_1);
rms_errors_2 = rms(errors_2);


